package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/NhanThanhHuynh/gqlgen1/graph/model"
	"github.com/dchest/uniuri"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.TodoInput) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// CreateTodoDetail is the resolver for the createTodoDetail field.
func (r *mutationResolver) CreateTodoDetail(ctx context.Context, input model.TodoDetailInput) (*model.TodoDetail, error) {
	panic(fmt.Errorf("not implemented: CreateTodoDetail - createTodoDetail"))
}

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.UserInput) (*model.User, error) {
	userInput := &model.User{
		ID:   uniuri.New(),
		Name: input.Name,
	}
	return r.UserRepo.CreateUser(userInput)
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	return nil, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*model.User, error) {
	return r.UserRepo.GetUserByID(id)
}

// TodoDetails is the resolver for the todoDetails field.
func (r *queryResolver) TodoDetails(ctx context.Context) ([]*model.TodoDetail, error) {
	panic(fmt.Errorf("not implemented: TodoDetails - todoDetails"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
